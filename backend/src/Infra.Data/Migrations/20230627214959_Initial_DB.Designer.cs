// <auto-generated />
using System;
using Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infra.Data.Migrations
{
    [DbContext(typeof(PersonalFinanceDbContext))]
    [Migration("20230627214959_Initial_DB")]
    partial class Initial_DB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Models.AppLanguageModel", b =>
                {
                    b.Property<short>("Id")
                        .HasColumnType("smallint")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("description");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("boolean")
                        .HasColumnName("is_default");

                    b.HasKey("Id")
                        .HasName("app_language_pk");

                    b.ToTable("app_language", (string)null);

                    b.HasData(
                        new
                        {
                            Id = (short)1,
                            Description = "English",
                            IsDefault = true
                        },
                        new
                        {
                            Id = (short)2,
                            Description = "Portuguese",
                            IsDefault = false
                        });
                });

            modelBuilder.Entity("Domain.Models.BalanceModel", b =>
                {
                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.Property<decimal>("Balance1")
                        .HasPrecision(12, 2)
                        .HasColumnType("numeric(12,2)")
                        .HasColumnName("balance");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created");

                    b.Property<string>("ReferenceMonth")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("character(6)")
                        .HasColumnName("reference_month")
                        .IsFixedLength()
                        .HasComment("Information with format YYYYMM");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated");

                    b.HasKey("UserId")
                        .HasName("balance_pk");

                    b.ToTable("balance", (string)null);
                });

            modelBuilder.Entity("Domain.Models.EntryCategoryModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<long>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("boolean")
                        .HasColumnName("active");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("description");

                    b.Property<short>("EntryTypeId")
                        .HasColumnType("smallint")
                        .HasColumnName("entry_type_id");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("entry_category_pk");

                    b.HasIndex("EntryTypeId")
                        .HasDatabaseName("ix_entry_category_entry_type_id");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_entry_category_user_id");

                    b.ToTable("entry_category", (string)null);
                });

            modelBuilder.Entity("Domain.Models.EntryModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<long>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("boolean")
                        .HasColumnName("active");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("entry_date");

                    b.Property<short>("EntryTypeId")
                        .HasColumnType("smallint")
                        .HasColumnName("entry_type_id");

                    b.Property<long>("IssuerId")
                        .HasColumnType("bigint")
                        .HasColumnName("issuer_id");

                    b.Property<string>("Note")
                        .HasMaxLength(4000)
                        .HasColumnType("character varying(4000)")
                        .HasColumnName("note");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.Property<decimal>("Value")
                        .HasPrecision(12, 2)
                        .HasColumnType("numeric(12,2)")
                        .HasColumnName("value");

                    b.HasKey("Id")
                        .HasName("entry_pk");

                    b.HasIndex("EntryTypeId")
                        .HasDatabaseName("ix_entry_entry_type_id");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_entry_user_id");

                    b.ToTable("entry", (string)null);
                });

            modelBuilder.Entity("Domain.Models.EntrySubcategoryModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<long>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("boolean")
                        .HasColumnName("active");

                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint")
                        .HasColumnName("category_id");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("description");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("entry_subcategory_pk");

                    b.HasIndex("CategoryId")
                        .HasDatabaseName("ix_entry_subcategory_category_id");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_entry_subcategory_user_id");

                    b.ToTable("entry_subcategory", (string)null);
                });

            modelBuilder.Entity("Domain.Models.EntryTypeModel", b =>
                {
                    b.Property<short>("Id")
                        .HasColumnType("smallint")
                        .HasColumnName("id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("description");

                    b.HasKey("Id")
                        .HasName("entry_type_pk");

                    b.ToTable("entry_type", (string)null);

                    b.HasData(
                        new
                        {
                            Id = (short)1,
                            Description = "Incoming"
                        },
                        new
                        {
                            Id = (short)2,
                            Description = "Expense"
                        });
                });

            modelBuilder.Entity("Domain.Models.IssuerModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("description");

                    b.Property<long>("EntrySubcategoryId")
                        .HasColumnType("bigint")
                        .HasColumnName("entry_subcategory_id");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("issuer_pk");

                    b.HasIndex("EntrySubcategoryId")
                        .HasDatabaseName("ix_issuer_entry_subcategory_id");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_issuer_user_id");

                    b.ToTable("issuer", (string)null);
                });

            modelBuilder.Entity("Domain.Models.TemplateEntryCategoryModel", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<bool>("Active")
                        .HasColumnType("boolean")
                        .HasColumnName("active");

                    b.Property<short>("AppLanguageId")
                        .HasColumnType("smallint")
                        .HasColumnName("app_language_id");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("description");

                    b.Property<short>("EntryTypeId")
                        .HasColumnType("smallint")
                        .HasColumnName("entry_type_id");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated");

                    b.HasKey("Id")
                        .HasName("template_entry_category_pk");

                    b.HasIndex("AppLanguageId")
                        .HasDatabaseName("ix_template_entry_category_app_language_id");

                    b.HasIndex("EntryTypeId")
                        .HasDatabaseName("ix_template_entry_category_entry_type_id");

                    b.ToTable("template_entry_category", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            AppLanguageId = (short)1,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(1096),
                            Description = "Fixed Incomings",
                            EntryTypeId = (short)1,
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(1105)
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            AppLanguageId = (short)1,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(1107),
                            Description = "Variable Incomings",
                            EntryTypeId = (short)1,
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(1107)
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            AppLanguageId = (short)1,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(1109),
                            Description = "Housing",
                            EntryTypeId = (short)2,
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(1109)
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            AppLanguageId = (short)1,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(1110),
                            Description = "Health",
                            EntryTypeId = (short)2,
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(1111)
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            AppLanguageId = (short)1,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(1112),
                            Description = "Transportation",
                            EntryTypeId = (short)2,
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(1112)
                        },
                        new
                        {
                            Id = 6,
                            Active = true,
                            AppLanguageId = (short)1,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(1114),
                            Description = "Personal",
                            EntryTypeId = (short)2,
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(1114)
                        },
                        new
                        {
                            Id = 7,
                            Active = true,
                            AppLanguageId = (short)1,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(1115),
                            Description = "Education",
                            EntryTypeId = (short)2,
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(1116)
                        },
                        new
                        {
                            Id = 8,
                            Active = true,
                            AppLanguageId = (short)1,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(1117),
                            Description = "Leisure",
                            EntryTypeId = (short)2,
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(1118)
                        },
                        new
                        {
                            Id = 9,
                            Active = true,
                            AppLanguageId = (short)1,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(1119),
                            Description = "Others",
                            EntryTypeId = (short)2,
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(1120)
                        },
                        new
                        {
                            Id = 10,
                            Active = true,
                            AppLanguageId = (short)2,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(1121),
                            Description = "Receitas Fixas",
                            EntryTypeId = (short)1,
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(1121)
                        },
                        new
                        {
                            Id = 11,
                            Active = true,
                            AppLanguageId = (short)2,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(1122),
                            Description = "Receitas Variáveis",
                            EntryTypeId = (short)1,
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(1124)
                        },
                        new
                        {
                            Id = 12,
                            Active = true,
                            AppLanguageId = (short)2,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(1125),
                            Description = "Habitação",
                            EntryTypeId = (short)2,
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(1125)
                        },
                        new
                        {
                            Id = 13,
                            Active = true,
                            AppLanguageId = (short)2,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(1126),
                            Description = "Saúde",
                            EntryTypeId = (short)2,
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(1127)
                        },
                        new
                        {
                            Id = 14,
                            Active = true,
                            AppLanguageId = (short)2,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(1128),
                            Description = "Transporte",
                            EntryTypeId = (short)2,
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(1128)
                        },
                        new
                        {
                            Id = 15,
                            Active = true,
                            AppLanguageId = (short)2,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(1129),
                            Description = "Pessoais",
                            EntryTypeId = (short)2,
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(1130)
                        },
                        new
                        {
                            Id = 16,
                            Active = true,
                            AppLanguageId = (short)2,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(1131),
                            Description = "Educação",
                            EntryTypeId = (short)2,
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(1131)
                        },
                        new
                        {
                            Id = 17,
                            Active = true,
                            AppLanguageId = (short)2,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(1132),
                            Description = "Lazer",
                            EntryTypeId = (short)2,
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(1133)
                        },
                        new
                        {
                            Id = 18,
                            Active = true,
                            AppLanguageId = (short)2,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(1134),
                            Description = "Outras",
                            EntryTypeId = (short)2,
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(1135)
                        });
                });

            modelBuilder.Entity("Domain.Models.TemplateEntrySubcategoryModel", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    b.Property<bool>("Active")
                        .HasColumnType("boolean")
                        .HasColumnName("active");

                    b.Property<short>("AppLanguageId")
                        .HasColumnType("smallint")
                        .HasColumnName("app_language_id");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer")
                        .HasColumnName("category_id");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("description");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated");

                    b.HasKey("Id")
                        .HasName("template_entry_subcategory_pk");

                    b.HasIndex("AppLanguageId")
                        .HasDatabaseName("ix_template_entry_subcategory_app_language_id");

                    b.HasIndex("CategoryId")
                        .HasDatabaseName("ix_template_entry_subcategory_category_id");

                    b.ToTable("template_entry_subcategory", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            AppLanguageId = (short)1,
                            CategoryId = 1,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4751),
                            Description = "Salary",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4755)
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            AppLanguageId = (short)1,
                            CategoryId = 2,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4757),
                            Description = "Extras",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4757)
                        },
                        new
                        {
                            Id = 3,
                            Active = true,
                            AppLanguageId = (short)1,
                            CategoryId = 3,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4758),
                            Description = "Rental",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4759)
                        },
                        new
                        {
                            Id = 4,
                            Active = true,
                            AppLanguageId = (short)1,
                            CategoryId = 3,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4760),
                            Description = "Condominium fee",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4761)
                        },
                        new
                        {
                            Id = 5,
                            Active = true,
                            AppLanguageId = (short)1,
                            CategoryId = 3,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4762),
                            Description = "Other fees",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4762)
                        },
                        new
                        {
                            Id = 6,
                            Active = true,
                            AppLanguageId = (short)1,
                            CategoryId = 3,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4763),
                            Description = "Energy",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4764)
                        },
                        new
                        {
                            Id = 7,
                            Active = true,
                            AppLanguageId = (short)1,
                            CategoryId = 3,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4765),
                            Description = "Water",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4766)
                        },
                        new
                        {
                            Id = 8,
                            Active = true,
                            AppLanguageId = (short)1,
                            CategoryId = 3,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4767),
                            Description = "Gas",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4767)
                        },
                        new
                        {
                            Id = 9,
                            Active = true,
                            AppLanguageId = (short)1,
                            CategoryId = 3,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4768),
                            Description = "Phones",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4769)
                        },
                        new
                        {
                            Id = 10,
                            Active = true,
                            AppLanguageId = (short)1,
                            CategoryId = 3,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4770),
                            Description = "Internet",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4770)
                        },
                        new
                        {
                            Id = 11,
                            Active = true,
                            AppLanguageId = (short)1,
                            CategoryId = 3,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4771),
                            Description = "Supermarket",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4772)
                        },
                        new
                        {
                            Id = 12,
                            Active = true,
                            AppLanguageId = (short)1,
                            CategoryId = 3,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4773),
                            Description = "Employees",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4773)
                        },
                        new
                        {
                            Id = 13,
                            Active = true,
                            AppLanguageId = (short)1,
                            CategoryId = 3,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4774),
                            Description = "Others",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4776)
                        },
                        new
                        {
                            Id = 14,
                            Active = true,
                            AppLanguageId = (short)1,
                            CategoryId = 4,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4777),
                            Description = "Health insurance",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4777)
                        },
                        new
                        {
                            Id = 15,
                            Active = true,
                            AppLanguageId = (short)1,
                            CategoryId = 4,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4778),
                            Description = "Expense with doctors",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4779)
                        },
                        new
                        {
                            Id = 16,
                            Active = true,
                            AppLanguageId = (short)1,
                            CategoryId = 4,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4780),
                            Description = "Dentist",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4780)
                        },
                        new
                        {
                            Id = 17,
                            Active = true,
                            AppLanguageId = (short)1,
                            CategoryId = 4,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4781),
                            Description = "Drugstore",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4782)
                        },
                        new
                        {
                            Id = 18,
                            Active = true,
                            AppLanguageId = (short)1,
                            CategoryId = 6,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4783),
                            Description = "Academy",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4783)
                        },
                        new
                        {
                            Id = 19,
                            Active = true,
                            AppLanguageId = (short)1,
                            CategoryId = 5,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4784),
                            Description = "Taxes and Fees",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4785)
                        },
                        new
                        {
                            Id = 20,
                            Active = true,
                            AppLanguageId = (short)1,
                            CategoryId = 5,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4786),
                            Description = "Insurance",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4786)
                        },
                        new
                        {
                            Id = 21,
                            Active = true,
                            AppLanguageId = (short)1,
                            CategoryId = 5,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4787),
                            Description = "Fuel",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4788)
                        },
                        new
                        {
                            Id = 22,
                            Active = true,
                            AppLanguageId = (short)1,
                            CategoryId = 5,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4789),
                            Description = "Parking",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4789)
                        },
                        new
                        {
                            Id = 23,
                            Active = true,
                            AppLanguageId = (short)1,
                            CategoryId = 5,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4790),
                            Description = "Washing",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4791)
                        },
                        new
                        {
                            Id = 24,
                            Active = true,
                            AppLanguageId = (short)1,
                            CategoryId = 5,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4792),
                            Description = "Maintenance",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4792)
                        },
                        new
                        {
                            Id = 25,
                            Active = true,
                            AppLanguageId = (short)1,
                            CategoryId = 5,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4793),
                            Description = "Traffic ticket",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4794)
                        },
                        new
                        {
                            Id = 26,
                            Active = true,
                            AppLanguageId = (short)1,
                            CategoryId = 5,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4795),
                            Description = "Taxi",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4795)
                        },
                        new
                        {
                            Id = 27,
                            Active = true,
                            AppLanguageId = (short)1,
                            CategoryId = 5,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4796),
                            Description = "Toll",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4797)
                        },
                        new
                        {
                            Id = 28,
                            Active = true,
                            AppLanguageId = (short)1,
                            CategoryId = 6,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4798),
                            Description = "Personal Hygiene (nails, waxing, etc.)",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4798)
                        },
                        new
                        {
                            Id = 29,
                            Active = true,
                            AppLanguageId = (short)1,
                            CategoryId = 6,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4799),
                            Description = "Hairdresser",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4800)
                        },
                        new
                        {
                            Id = 30,
                            Active = true,
                            AppLanguageId = (short)1,
                            CategoryId = 6,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4801),
                            Description = "Clothing",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4802)
                        },
                        new
                        {
                            Id = 31,
                            Active = true,
                            AppLanguageId = (short)1,
                            CategoryId = 6,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4803),
                            Description = "Other Purchases",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4803)
                        },
                        new
                        {
                            Id = 32,
                            Active = true,
                            AppLanguageId = (short)1,
                            CategoryId = 7,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4804),
                            Description = "School / College",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4805)
                        },
                        new
                        {
                            Id = 33,
                            Active = true,
                            AppLanguageId = (short)1,
                            CategoryId = 7,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4806),
                            Description = "Courses",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4806)
                        },
                        new
                        {
                            Id = 34,
                            Active = true,
                            AppLanguageId = (short)1,
                            CategoryId = 7,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4807),
                            Description = "Languages ​​course",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4808)
                        },
                        new
                        {
                            Id = 35,
                            Active = true,
                            AppLanguageId = (short)1,
                            CategoryId = 7,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4809),
                            Description = "Restaurants",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4809)
                        },
                        new
                        {
                            Id = 36,
                            Active = true,
                            AppLanguageId = (short)1,
                            CategoryId = 7,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4810),
                            Description = "Fast food",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4811)
                        },
                        new
                        {
                            Id = 37,
                            Active = true,
                            AppLanguageId = (short)1,
                            CategoryId = 7,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4812),
                            Description = "Games",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4812)
                        },
                        new
                        {
                            Id = 38,
                            Active = true,
                            AppLanguageId = (short)1,
                            CategoryId = 7,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4813),
                            Description = "Tours",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4814)
                        },
                        new
                        {
                            Id = 39,
                            Active = true,
                            AppLanguageId = (short)1,
                            CategoryId = 7,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4815),
                            Description = "Trips",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4815)
                        },
                        new
                        {
                            Id = 40,
                            Active = true,
                            AppLanguageId = (short)1,
                            CategoryId = 7,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4816),
                            Description = "Donations / Tithes / Offerings",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4816)
                        },
                        new
                        {
                            Id = 41,
                            Active = true,
                            AppLanguageId = (short)1,
                            CategoryId = 7,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4817),
                            Description = "Gifts",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4818)
                        },
                        new
                        {
                            Id = 42,
                            Active = true,
                            AppLanguageId = (short)1,
                            CategoryId = 7,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4819),
                            Description = "Others",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4819)
                        },
                        new
                        {
                            Id = 43,
                            Active = true,
                            AppLanguageId = (short)2,
                            CategoryId = 10,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4820),
                            Description = "Salário",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4821)
                        },
                        new
                        {
                            Id = 44,
                            Active = true,
                            AppLanguageId = (short)2,
                            CategoryId = 11,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4822),
                            Description = "Extras",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4822)
                        },
                        new
                        {
                            Id = 45,
                            Active = true,
                            AppLanguageId = (short)2,
                            CategoryId = 12,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4824),
                            Description = "Aluguel",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4824)
                        },
                        new
                        {
                            Id = 46,
                            Active = true,
                            AppLanguageId = (short)2,
                            CategoryId = 12,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4825),
                            Description = "Condomínio",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4826)
                        },
                        new
                        {
                            Id = 47,
                            Active = true,
                            AppLanguageId = (short)2,
                            CategoryId = 12,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4827),
                            Description = "IPTU / Taxas",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4827)
                        },
                        new
                        {
                            Id = 48,
                            Active = true,
                            AppLanguageId = (short)2,
                            CategoryId = 12,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4828),
                            Description = "Energia",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4829)
                        },
                        new
                        {
                            Id = 49,
                            Active = true,
                            AppLanguageId = (short)2,
                            CategoryId = 12,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4830),
                            Description = "Água",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4830)
                        },
                        new
                        {
                            Id = 51,
                            Active = true,
                            AppLanguageId = (short)2,
                            CategoryId = 12,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4831),
                            Description = "Gás",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4832)
                        },
                        new
                        {
                            Id = 52,
                            Active = true,
                            AppLanguageId = (short)2,
                            CategoryId = 12,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4833),
                            Description = "Telefone",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4833)
                        },
                        new
                        {
                            Id = 53,
                            Active = true,
                            AppLanguageId = (short)2,
                            CategoryId = 12,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4834),
                            Description = "Internet",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4835)
                        },
                        new
                        {
                            Id = 54,
                            Active = true,
                            AppLanguageId = (short)2,
                            CategoryId = 12,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4836),
                            Description = "Supermercado",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4836)
                        },
                        new
                        {
                            Id = 55,
                            Active = true,
                            AppLanguageId = (short)2,
                            CategoryId = 12,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4837),
                            Description = "Empregados",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4838)
                        },
                        new
                        {
                            Id = 56,
                            Active = true,
                            AppLanguageId = (short)2,
                            CategoryId = 12,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4838),
                            Description = "Outros",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4839)
                        },
                        new
                        {
                            Id = 57,
                            Active = true,
                            AppLanguageId = (short)2,
                            CategoryId = 13,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4840),
                            Description = "Plano de Saúde",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4840)
                        },
                        new
                        {
                            Id = 58,
                            Active = true,
                            AppLanguageId = (short)2,
                            CategoryId = 13,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4841),
                            Description = "Médicos",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4842)
                        },
                        new
                        {
                            Id = 59,
                            Active = true,
                            AppLanguageId = (short)2,
                            CategoryId = 13,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4843),
                            Description = "Dentista",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4843)
                        },
                        new
                        {
                            Id = 61,
                            Active = true,
                            AppLanguageId = (short)2,
                            CategoryId = 13,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4844),
                            Description = "Drogaria",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4845)
                        },
                        new
                        {
                            Id = 62,
                            Active = true,
                            AppLanguageId = (short)2,
                            CategoryId = 13,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4846),
                            Description = "Academia",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4846)
                        },
                        new
                        {
                            Id = 63,
                            Active = true,
                            AppLanguageId = (short)2,
                            CategoryId = 14,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4848),
                            Description = "IPVA / Seguro Obrigatório / Licenciamento",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4848)
                        },
                        new
                        {
                            Id = 64,
                            Active = true,
                            AppLanguageId = (short)2,
                            CategoryId = 14,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4849),
                            Description = "Seguro",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4850)
                        },
                        new
                        {
                            Id = 65,
                            Active = true,
                            AppLanguageId = (short)2,
                            CategoryId = 14,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4851),
                            Description = "Comnbustível",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4851)
                        },
                        new
                        {
                            Id = 66,
                            Active = true,
                            AppLanguageId = (short)2,
                            CategoryId = 14,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4852),
                            Description = "Estacionamentos",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4853)
                        },
                        new
                        {
                            Id = 67,
                            Active = true,
                            AppLanguageId = (short)2,
                            CategoryId = 14,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4854),
                            Description = "Lavagens",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4854)
                        },
                        new
                        {
                            Id = 68,
                            Active = true,
                            AppLanguageId = (short)2,
                            CategoryId = 14,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4855),
                            Description = "Mecânico/Manutenções",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4856)
                        },
                        new
                        {
                            Id = 69,
                            Active = true,
                            AppLanguageId = (short)2,
                            CategoryId = 14,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4856),
                            Description = "Multas",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4857)
                        },
                        new
                        {
                            Id = 70,
                            Active = true,
                            AppLanguageId = (short)2,
                            CategoryId = 14,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4858),
                            Description = "Taxi",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4859)
                        },
                        new
                        {
                            Id = 71,
                            Active = true,
                            AppLanguageId = (short)2,
                            CategoryId = 14,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4859),
                            Description = "Pedágios",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4860)
                        },
                        new
                        {
                            Id = 72,
                            Active = true,
                            AppLanguageId = (short)2,
                            CategoryId = 15,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4861),
                            Description = "Higiene Pessoal (unha, depilação etc.)",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4861)
                        },
                        new
                        {
                            Id = 73,
                            Active = true,
                            AppLanguageId = (short)2,
                            CategoryId = 15,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4862),
                            Description = "Cabeleireiro",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4863)
                        },
                        new
                        {
                            Id = 74,
                            Active = true,
                            AppLanguageId = (short)2,
                            CategoryId = 15,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4864),
                            Description = "Vestuário",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4864)
                        },
                        new
                        {
                            Id = 75,
                            Active = true,
                            AppLanguageId = (short)2,
                            CategoryId = 15,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4865),
                            Description = "Demais Compras",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4866)
                        },
                        new
                        {
                            Id = 76,
                            Active = true,
                            AppLanguageId = (short)2,
                            CategoryId = 15,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4867),
                            Description = "Outros/Não identificado",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4867)
                        },
                        new
                        {
                            Id = 77,
                            Active = true,
                            AppLanguageId = (short)2,
                            CategoryId = 16,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4868),
                            Description = "Escola / Faculdade",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4869)
                        },
                        new
                        {
                            Id = 78,
                            Active = true,
                            AppLanguageId = (short)2,
                            CategoryId = 16,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4870),
                            Description = "Cursos",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4870)
                        },
                        new
                        {
                            Id = 79,
                            Active = true,
                            AppLanguageId = (short)2,
                            CategoryId = 16,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4871),
                            Description = "Curso de Idiomas",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4872)
                        },
                        new
                        {
                            Id = 80,
                            Active = true,
                            AppLanguageId = (short)2,
                            CategoryId = 17,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4873),
                            Description = "Restaurantes",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4873)
                        },
                        new
                        {
                            Id = 81,
                            Active = true,
                            AppLanguageId = (short)2,
                            CategoryId = 17,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4874),
                            Description = "Fast food",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4875)
                        },
                        new
                        {
                            Id = 82,
                            Active = true,
                            AppLanguageId = (short)2,
                            CategoryId = 17,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4875),
                            Description = "Games",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4876)
                        },
                        new
                        {
                            Id = 83,
                            Active = true,
                            AppLanguageId = (short)2,
                            CategoryId = 17,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4877),
                            Description = "Passeios",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4877)
                        },
                        new
                        {
                            Id = 84,
                            Active = true,
                            AppLanguageId = (short)2,
                            CategoryId = 17,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4878),
                            Description = "Viagens",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4879)
                        },
                        new
                        {
                            Id = 85,
                            Active = true,
                            AppLanguageId = (short)2,
                            CategoryId = 18,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4880),
                            Description = "Doações / dízimos / ofertas",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4880)
                        },
                        new
                        {
                            Id = 86,
                            Active = true,
                            AppLanguageId = (short)2,
                            CategoryId = 18,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4881),
                            Description = "Presentes",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4881)
                        },
                        new
                        {
                            Id = 87,
                            Active = true,
                            AppLanguageId = (short)2,
                            CategoryId = 18,
                            Created = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4882),
                            Description = "Others",
                            Updated = new DateTime(2023, 6, 27, 18, 49, 59, 706, DateTimeKind.Local).AddTicks(4883)
                        });
                });

            modelBuilder.Entity("Domain.Models.UserModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityAlwaysColumn(b.Property<long>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("boolean")
                        .HasColumnName("active");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("password");

                    b.Property<TimeOnly>("Updated")
                        .HasColumnType("time without time zone")
                        .HasColumnName("updated");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("user_name");

                    b.HasKey("Id")
                        .HasName("user_pk");

                    b.ToTable("user", (string)null);
                });

            modelBuilder.Entity("Domain.Models.BalanceModel", b =>
                {
                    b.HasOne("Domain.Models.UserModel", "User")
                        .WithOne("Balance")
                        .HasForeignKey("Domain.Models.BalanceModel", "UserId")
                        .IsRequired()
                        .HasConstraintName("balance_fk_user");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Models.EntryCategoryModel", b =>
                {
                    b.HasOne("Domain.Models.EntryTypeModel", "EntryType")
                        .WithMany("EntryCategories")
                        .HasForeignKey("EntryTypeId")
                        .IsRequired()
                        .HasConstraintName("entry_category_fk_entry_type");

                    b.HasOne("Domain.Models.UserModel", "User")
                        .WithMany("EntryCategories")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("entry_category_fk_user");

                    b.Navigation("EntryType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Models.EntryModel", b =>
                {
                    b.HasOne("Domain.Models.EntryTypeModel", "EntryType")
                        .WithMany("Entries")
                        .HasForeignKey("EntryTypeId")
                        .IsRequired()
                        .HasConstraintName("entry_fk_entry_type");

                    b.HasOne("Domain.Models.UserModel", "User")
                        .WithMany("Entries")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("entry_fk_user");

                    b.Navigation("EntryType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Models.EntrySubcategoryModel", b =>
                {
                    b.HasOne("Domain.Models.EntryCategoryModel", "Category")
                        .WithMany("EntrySubcategories")
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("entry_subcategory_fk_category");

                    b.HasOne("Domain.Models.UserModel", "User")
                        .WithMany("EntrySubcategories")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("entry_subcategory_fk_user");

                    b.Navigation("Category");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Models.IssuerModel", b =>
                {
                    b.HasOne("Domain.Models.EntrySubcategoryModel", "EntrySubcategory")
                        .WithMany("Issuers")
                        .HasForeignKey("EntrySubcategoryId")
                        .IsRequired()
                        .HasConstraintName("issuer_fk_subcategory");

                    b.HasOne("Domain.Models.UserModel", "User")
                        .WithMany("Issuers")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("issuer_fk_user");

                    b.Navigation("EntrySubcategory");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Models.TemplateEntryCategoryModel", b =>
                {
                    b.HasOne("Domain.Models.AppLanguageModel", "AppLanguage")
                        .WithMany("TemplateEntryCategories")
                        .HasForeignKey("AppLanguageId")
                        .IsRequired()
                        .HasConstraintName("template_entry_category_fk_app_language");

                    b.HasOne("Domain.Models.EntryTypeModel", "EntryType")
                        .WithMany("TemplateEntryCategories")
                        .HasForeignKey("EntryTypeId")
                        .IsRequired()
                        .HasConstraintName("template_entry_category_fk_entry_type");

                    b.Navigation("AppLanguage");

                    b.Navigation("EntryType");
                });

            modelBuilder.Entity("Domain.Models.TemplateEntrySubcategoryModel", b =>
                {
                    b.HasOne("Domain.Models.AppLanguageModel", "AppLanguage")
                        .WithMany("TemplateEntrySubcategories")
                        .HasForeignKey("AppLanguageId")
                        .IsRequired()
                        .HasConstraintName("template_entry_subcategory_fk_app_language");

                    b.HasOne("Domain.Models.TemplateEntryCategoryModel", "Category")
                        .WithMany("TemplateEntrySubcategories")
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("template_entry_subcategory_fk_category");

                    b.Navigation("AppLanguage");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Domain.Models.AppLanguageModel", b =>
                {
                    b.Navigation("TemplateEntryCategories");

                    b.Navigation("TemplateEntrySubcategories");
                });

            modelBuilder.Entity("Domain.Models.EntryCategoryModel", b =>
                {
                    b.Navigation("EntrySubcategories");
                });

            modelBuilder.Entity("Domain.Models.EntrySubcategoryModel", b =>
                {
                    b.Navigation("Issuers");
                });

            modelBuilder.Entity("Domain.Models.EntryTypeModel", b =>
                {
                    b.Navigation("Entries");

                    b.Navigation("EntryCategories");

                    b.Navigation("TemplateEntryCategories");
                });

            modelBuilder.Entity("Domain.Models.TemplateEntryCategoryModel", b =>
                {
                    b.Navigation("TemplateEntrySubcategories");
                });

            modelBuilder.Entity("Domain.Models.UserModel", b =>
                {
                    b.Navigation("Balance");

                    b.Navigation("Entries");

                    b.Navigation("EntryCategories");

                    b.Navigation("EntrySubcategories");

                    b.Navigation("Issuers");
                });
#pragma warning restore 612, 618
        }
    }
}
